---
settings:
  chains:
    relay_chain: &relay_chain
      wsPort: 9900
    assets_parachain: &assets_parachain
      wsPort: 9910
      paraId: &ap_id 1000
    trappist_parachain: &trappist_parachain
      wsPort: 9920
      paraId: &tp_id 2000
  variables:
    common:
      amount: &amount 100000000000000
      require_weight_at_most: &weight_at_most 1000000000
    chains:
      relay_chain:
        signer: &rc_signer //Alice
        assets_parachain_destination: &ap_dest { v3: { parents: 0, interior: { x1: { parachain: *ap_id }}}}
        assets_parachain_dest_routed: &ap_dest_routed { v3: { parents: 1, interior: { x1: { parachain: *ap_id } }}}
        trappist_parachain_destination: &tp_dest { v3: { parents: 0, interior: { x1: { parachain: *tp_id }}}}
        trappist_parachain_dest_routed: &tp_dest_routed { v3: { parents: 1, interior: { x1: { parachain: *tp_id } }}}
      assets_parachain_account:
        signer: &ap_signer //Alice
        wallet: &ap_wallet HNZata7iMYWmk5RvZRTiAsSDhV8366zq2YGb3tLH5Upf74F
        bob_wallet: &ap_bob_wallet FoQJpPyadYccjavVdTWxpxU7rUEaYhfLCPwXgkfD6Zat9QP
        asset_id: &asset_id 1
        assets_pallet_id: &assets_pallet_id 50
        asset_min_balance: &asset_ed 1
        asset_decimals: &asset_decimals 12
      trappist_parachain:
        signer: &tp_signer //Alice
        wallet: &tp_wallet 5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY
        bob_wallet: &tp_bob_wallet 5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty
        sovereign_account: &tp_sovereign_sibl FBeL7EAeUroLWXW1yfKboiqTqVfbRBcsUKd6QqVf4kGBySS
        trappist_parachain_account: &tp_acc '0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d'
  decodedCalls:
    force_create_asset:
      chain: *assets_parachain
      pallet: assets
      call: forceCreate
      args: [
        *asset_id,
        { Id: *ap_wallet }, # owner
        true, # isSufficient
        *asset_ed # minBalance
      ]
    force_create_asset_trappist:
      chain: *trappist_parachain
      pallet: assets
      call: forceCreate
      args: [
        *asset_id,
        { Id: *tp_wallet }, # owner
        true, # isSufficient
        *asset_ed # minBalance
      ]
    system_remark_with_event:
      chain: *assets_parachain
      pallet: system
      call: remarkWithEvent
      args: [ 0x0011 ]

tests:
  - name: HRMP
    describes:
      - name: polkadotXcm.limitedReserveTransferAssets (Asset) | Assets Parachain -> Trappist Parachain
        its:
          - name: A sufficient Asset should exist in the Assets Parachain
            actions:
              - extrinsics:
                - chain: *relay_chain
                  signer: *rc_signer
                  sudo: true
                  pallet: xcmPallet
                  call: send
                  args: [
                    *ap_dest, # destination
                    {
                      V3: [ #message
                        {
                          Transact: {
                            originKind: Superuser,
                            requireWeightAtMost: *weight_at_most,
                            call: $force_create_asset
                          }
                        }
                      ]
                    }
                  ]
                  events:
                    - name: xcmPallet.Sent
                    - name: dmpQueue.ExecutedDownward
                      chain: *assets_parachain
                      attribute:
                        type: XcmV3TraitsOutcome
                        isComplete: true
                        value: 2,000,000,000
              - queries:
                  forced_created_asset:
                    chain: *assets_parachain
                    pallet: assets
                    call: asset
                    args: [ *asset_id ]
              - asserts:
                  isSome:
                    args: [ $forced_created_asset ]

          - name: Set Asset metadata should work (Assets Parachain)
            actions:
              - extrinsics:
                - chain: *assets_parachain
                  signer: *ap_signer
                  pallet: assets
                  call: setMetadata
                  args: [
                    *asset_id,
                    "xUSD",
                    "xUSD",
                    *asset_decimals
                  ]
                  events:
                    - name: assets.MetadataSet

          - name: Some Assets should be minted for the sender
            actions:
              - extrinsics:
                - chain: *assets_parachain
                  signer: *ap_signer
                  pallet: assets
                  call: mint
                  args: [
                    *asset_id,
                    *ap_bob_wallet,
                    *amount
                  ]
                  events:
                    - name: assets.Issued

          - name: A sufficient Asset should exist in the Trappist Parachain (no minting)
            actions:
              - extrinsics:
                - chain: *relay_chain
                  signer: *rc_signer
                  sudo: true
                  pallet: xcmPallet
                  call: send
                  args: [
                    *tp_dest, # destination
                    {
                      V3: [ #message
                        {
                          Transact: {
                            originKind: Superuser,
                            requireWeightAtMost: *weight_at_most,
                            call: $force_create_asset_trappist
                          }
                        }
                      ]
                    }
                  ]
                  events:
                    - name: xcmPallet.Sent
                    - name: dmpQueue.ExecutedDownward
                      chain: *trappist_parachain
                      attribute:
                        type: XcmV3TraitsOutcome
                        isComplete: true
                        value: 2,000,000,000
              - queries:
                  force_create_asset_trappist:
                    chain: *trappist_parachain
                    pallet: assets
                    call: asset
                    args: [ *asset_id ]
              - asserts:
                  isSome:
                    args: [ $force_create_asset_trappist ]

          - name: Set Asset metadata should work (Trappist Parachain)
            actions:
              - extrinsics:
                - chain: *trappist_parachain
                  signer: *tp_signer
                  pallet: assets
                  call: setMetadata
                  args: [
                    *asset_id,
                    "txUSD",
                    "txUSD",
                    *asset_decimals
                  ]
                  events:
                    - name: assets.MetadataSet
